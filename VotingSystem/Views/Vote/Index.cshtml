@model VoteViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Add Vote</h1>

@using (Html.BeginForm("Index", "Vote", FormMethod.Post))
{
    @Html.Label("User: ")
    <br />
    @Html.DropDownListFor(m => m.SelectedIdUser, new SelectList(Model.Users, "Id", "Name"), "Please select", new { @class = "form-control" })
    @Html.HiddenFor(m => m.SelectedIdUser)
    <hr />
    @Html.Label("Restaurant: ")
    <br />
    @Html.DropDownListFor(m => m.SelectedIdRestaurant, new SelectList(Model.Restaurants, "Id", "Name"), "Please select", new { @class = "form-control" })
    @Html.HiddenFor(m => m.SelectedIdRestaurant)
    <br />
    <div class="form-group">
        <input type="submit" value="Vote" class="btn btn-primary" />
    </div>
    <div class="alert alert-secondary" role="alert" id="showMessage">
        @ViewBag.Message
    </div>

    <div>
        <a asp-action="Index" asp-controller="Home">Back to List</a>
    </div>
}

@if (string.IsNullOrEmpty(ViewBag.Message))
{
    <script>
        document.getElementById('showMessage').style.display = "none";
    </script>
}


